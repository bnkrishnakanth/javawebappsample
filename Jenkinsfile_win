import groovy.json.JsonSlurper

def getFtpPublishProfile(def publishProfilesJson) {
    def pubProfiles = new JsonSlurper().parseText(publishProfilesJson)
    for (p in pubProfiles)
        if (p['publishMethod'] == 'FTP')
            return [url: p.publishUrl, username: p.userName, password: p.userPWD]
}

node {
    withEnv(['AZURE_SUBSCRIPTION_ID=b54188b7-ab19-4a3c-a62e-5b7c8bc11e34',
            'AZURE_TENANT_ID=c505f56c-9d50-4bac-aec8-831a9c1daa8e']) {
        stage('init') {
            checkout scm
        }

        stage('build') {
            bat 'mvn clean package'
        }

        stage('deploy') {
            def resourceGroup = 'CS10Capstone1-eastus'
            def webAppName = 'cs10capstone1'
            // login Azure
            withCredentials([usernamePassword(credentialsId: 'KKAdminSP', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
                bat '''
                    az login --service-principal -u %AZURE_CLIENT_ID% -p %AZURE_CLIENT_SECRET% -t %AZURE_TENANT_ID%
                    az account set -s %AZURE_SUBSCRIPTION_ID%
                '''
            }
   // get publish settings
    def pubProfilesJson = powershell(script: "az webapp deployment list-publishing-profiles -g ${resourceGroup} -n ${webAppName}", returnStdout: true)
    def ftpProfile = getFtpPublishProfile pubProfilesJson
    // upload package
    powershell """
        \$username = '${ftpProfile.username}'
        \$password = '${ftpProfile.password}'
        \$url = '${ftpProfile.url}/webapps/ROOT.war'
        \$filePath = 'target\\calculator-1.0.war'
        \$securePassword = ConvertTo-SecureString \$password -AsPlainText -Force
        \$credential = New-Object System.Management.Automation.PSCredential(\$username, \$securePassword)
        Invoke-WebRequest -Uri \$url -Credential \$credential -Method Put -InFile \$filePath
    """
    // log out
    powershell 'az logout'
    }
}
