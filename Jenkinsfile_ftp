import groovy.json.JsonSlurper

def getFtpPublishProfile(def publishProfilesJson) {
  def pubProfiles = new JsonSlurper().parseText(publishProfilesJson)
  for (p in pubProfiles)
    if (p['publishMethod'] == 'FTP')
      return [url: p.publishUrl, username: p.userName, password: p.userPWD]
}

node {
  withEnv(['AZURE_SUBSCRIPTION_ID=b54188b7-ab19-4a3c-a62e-5b7c8bc11e34',
        'AZURE_TENANT_ID=c505f56c-9d50-4bac-aec8-831a9c1daa8e']) {
    stage('init') {
      checkout scm
    }
  
    stage('build') {
      sh 'mvn clean package'
    }
  
    stage('deploy') {
      def resourceGroup = 'CS10Capstone1-eastus'
      def webAppName = 'cs10capstone1'
      // login Azure
      withCredentials([usernamePassword(credentialsId: 'KKAdminSP', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
       sh '''
          az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
          az account set -s $AZURE_SUBSCRIPTION_ID
        '''
      }
      // get publish settings
      // upload package
      sh '''
         creds=($(az webapp deployment list-publishing-profiles --name cs10capstone1 --resource-group CS10Capstone1-eastus --query "[?contains(publishMethod, 'FTP')].[publishUrl,userName,userPWD]" --output tsv))
         curl -v -T target/calculator-1.0.war -u ${creds[1]}:${creds[2]} ${creds[0]}/webapps/ROOT.war
         #curl -v -T target/calculator-1.0.war -u ${ftpUser}}:${ftpPassword}} ${ftpUrl}/webapps/ROOT.war
      '''
      // log out
      sh 'az logout'
    }
  }
}
